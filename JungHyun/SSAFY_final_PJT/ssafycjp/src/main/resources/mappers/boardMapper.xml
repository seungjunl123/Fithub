<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cjp.model.dao.BoardDao">
	<!-- 전체 게시글 조회 -->
	<!-- <select id="selectAll" resultType="Board"> SELECT * FROM board; </select> -->

	<select id="selectAll" resultType="Board">
		SELECT
		b.id,
		b.category,
		c.name AS categoryName,
		b.postboard_id,
		b.title,
		b.content,
		b.writer,
		b.like,
		b.regDate,
		b.viewCnt
		FROM
		board b
		JOIN
		category c ON b.category = c.category AND b.postboard_id = c.postboard_id
		ORDER BY
		CASE
		WHEN c.name = '공지' THEN 1
		ELSE 2
		END, b.regDate DESC
	</select>

	<!-- 특정 게시판 게시글 조회 -->
	<select id="selectByPostBoardId" resultType="Board">
		SELECT
		b.id,
		b.category,
		c.name AS categoryName,
		b.postboard_id,
		b.title,
		b.content,
		b.writer,
		b.like,
		b.regDate,
		b.viewCnt
		FROM
		board b
		JOIN
		category c ON b.category = c.category AND b.postboard_id = c.postboard_id
		WHERE
		b.postboard_id = #{postBoardId}
		ORDER BY
		CASE
		WHEN c.name = '공지' THEN 1
		ELSE 2
		END, b.regDate DESC
	</select>

	<!-- 전체 게시판 이름 리스트 조회 -->
	<select id="getPostboardNames">
		SELECT title FROM postboard
	</select>

	<!-- 게시판별 게시글 말머리 종류 조회 -->
	<select id="selectCategoriesByPostBoardId" resultType="map">
		SELECT id, postboard_id, category, name
		FROM category
		WHERE postboard_id = #{postBoardId}
	</select>

	<!-- 게시글 선택 -->
	<select id="selectOne" parameterType="int" resultType="Board">
		SELECT *
		FROM board WHERE id = #{id}
	</select>

	<!-- 게시글 등록 -->
	<insert id="insertBoard" parameterType="Board">
		INSERT INTO board
		(postboard_id,category,title,content,writer,regDate)
		VALUES
		(#{postBoardId},#{category},#{title},#{content},#{writer},#{regDate})
	</insert>

	<!-- 게시글 삭제 -->
	<delete id="deleteBoard" parameterType="int">
		DELETE FROM board WHERE
		id = #{id}
	</delete>

	<!-- 게시글 수정 -->
	<update id="updateBoard" parameterType="Board">
		UPDATE board SET
		postboard_id = #{postBoardId},
		category = #{category},
		title = #{title},
		content = #{content}
		WHERE id=#{id}
	</update>

	<!-- 조회수 증가 -->
	<update id="updateViewCnt" parameterType="int">
		UPDATE board SET
		viewCnt = viewCnt+1
		WHERE id=#{id}
	</update>

	<!-- 추천수 증가 -->
	<insert id="insertBoardLike">
		INSERT IGNORE INTO board_likes (board_id, user_id)
		VALUES (#{boardId}, #{userId})
	</insert>

	<update id="updateBoardLike">
		UPDATE board
		SET `like` = (
		SELECT COUNT(*)
		FROM board_likes
		WHERE board_id = #{boardId}
		)
		WHERE id = #{boardId}
	</update>
		

	<insert id="InsertUpLike">
		INSERT IGNORE INTO board_likes (board_id, user_id)
        VALUES (#{boardId}, #{userId});
     </insert>
	
	<update id="UpdateLike">
	        UPDATE board
        SET like = (
            SELECT COUNT(*)
            FROM board_likes
            WHERE board_id = #{boardId}
        )
        WHERE id = #{boardId}
	</update>
	
	<!-- 추천수 감소 -->
	<update id="downLike" parameterType="int">
		DELETE FROM board_likes WHERE board_id = #{boardId} AND user_id = #{userId};
	</update>

	<!-- 추천수 감소 -->
	<delete id="deleteBoardLike">
		DELETE FROM board_likes WHERE board_id = #{boardId} AND user_id = #{userId}
	</delete>

	<update id="updateBoardDislike">
		UPDATE board
		SET `like` = (
		SELECT COUNT(*)
		FROM board_likes
		WHERE board_id = #{boardId}
		)
		WHERE id = #{boardId}
	</update>

	<!-- 해당 아이디의 좋아요 여부 확인 -->
	<select id="hasUserLikedBoard" parameterType="map"
		resultType="boolean">
		SELECT EXISTS (
		SELECT 1
		FROM board_likes
		WHERE board_id = #{boardId}
		AND user_id = #{userId}
		)
	</select>

	<!-- 게시글 검색 -->
	<select id="search" parameterType="SearchCondition"
		resultType="Board">
		SELECT * FROM board
		<if test="key!='none'">
			WHERE ${key} LIKE CONCAT('%',#{word},'%')
		</if>
		<if test="orderBy!='none'">
			ORDER BY ${orderBy} ${orderByDir}
		</if>
	</select>
</mapper>